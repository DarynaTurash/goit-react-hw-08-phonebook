{"version":3,"file":"static/js/227.39b39386.chunk.js","mappings":"mTAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAkBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0HASzBC,GAAeJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAA0BM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4IASzCI,EAAYP,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,iFAOxBM,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAaW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8IAa1BS,EAAeZ,EAAAA,GAAAA,OAAaa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,+N,qECvC5BW,E,QAAUd,GAAAA,QAAcE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kC,sJCK/BY,EAAmBC,EAAAA,KAAaC,MAAM,CACxCC,KAAMF,EAAAA,KACDG,SAAS,oBACdC,MAAOJ,EAAAA,KACFI,MAAM,yBACND,SAAS,qBACdE,SAAUL,EAAAA,KACLM,IAAI,EAAG,6CACPC,QAAQ,KAAM,kDACdJ,SAAS,0BAyClB,EAtCqB,WACjB,IAAMK,GAAWC,EAAAA,EAAAA,MAEjB,OACIC,EAAAA,EAAAA,KAACZ,EAAAA,EAAO,CAAAa,UACRD,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CAACC,cAAe,CACXX,KAAM,GACNE,MAAO,GACPC,SAAU,IAEdN,iBAAkBA,EAElBe,SAAU,SAACC,EAAQC,GACfR,GAASS,EAAAA,EAAAA,IAASF,GACtB,EAAEJ,UACVO,EAAAA,EAAAA,MAACnC,EAAAA,GAAI,CAAA4B,SAAA,EACLO,EAAAA,EAAAA,MAAC3B,EAAAA,GAAS,CAAAoB,SAAA,CAAC,aAEXD,EAAAA,EAAAA,KAACjB,EAAAA,GAAU,CAAC0B,KAAK,OAAOjB,KAAK,OAAOkB,YAAY,qBAChDV,EAAAA,EAAAA,KAACtB,EAAAA,GAAY,CAACc,KAAK,OAAOmB,UAAU,YAEpCH,EAAAA,EAAAA,MAAC3B,EAAAA,GAAS,CAAAoB,SAAA,CAAC,SAEXD,EAAAA,EAAAA,KAACjB,EAAAA,GAAU,CAAC0B,KAAK,QAAQjB,KAAK,QAAQkB,YAAY,sBAClDV,EAAAA,EAAAA,KAACtB,EAAAA,GAAY,CAACc,KAAK,SAASmB,UAAU,YAEtCH,EAAAA,EAAAA,MAAC3B,EAAAA,GAAS,CAAAoB,SAAA,CAAC,YAEXD,EAAAA,EAAAA,KAACjB,EAAAA,GAAU,CAAC0B,KAAK,WAAWjB,KAAK,WAAWkB,YAAY,+BACxDV,EAAAA,EAAAA,KAACtB,EAAAA,GAAY,CAACc,KAAK,SAASmB,UAAU,YAEtCX,EAAAA,EAAAA,KAACd,EAAAA,GAAY,CAACuB,KAAK,SAAQR,SAAC,mBAKpC,E,UCnDMW,E,QAAYtC,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+EAoB5B,EAdiB,WAEb,OACIuB,EAAAA,EAAAA,KAAA,QAAAC,UACAO,EAAAA,EAAAA,MAACI,EAAS,CAAAX,SAAA,EACVD,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAAAZ,UACHD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,oBAEXD,EAAAA,EAAAA,KAACc,EAAY,QAIrB,C","sources":["components/contactForm/contactForm.styled.js","components/loginForm/loginForm.styled.js","components/registerForm/registerForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormikForm, ErrorMessage as FormikErrorMessage, Field } from 'formik';\n\nexport const Form = styled(FormikForm)`\ndisplay: flex;\nflex-direction: column;\ngap: 15px;\npadding: 25px;\nborder: 1px solid #2a2a2a;\nwidth: 375px;\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\nbackground-color: #DE6363;\ncolor: white;\nborder-radius: 7px;\npadding: 5px 10px 5px 10px;\nmargin: 5px 0 5px 0;\nwidth: 353px;\n`;\n\nexport const FormField = styled.label`\ndisplay: flex;\nflex-direction: column;\ngap: 5px;\nfont-weight: 600;\n`;\n\nexport const FieldInput = styled(Field)`\nwidth: 340px;\npadding: 10px 15px 10px 15px;\n\n&:hover {\n    border-color: #317EC6;\n}\n\n&::placeholder {\n    opacity: 0.3;\n}\n`;\n\nexport const SubmitButton = styled.button`\nwidth: 375px;\npadding: 10px 10px 10px 10px;\nmargin-top: 15px;\nborder: 0;\nborder-radius: 7px;\nfont-weight: 600;\nbackground-color: #A2C2DF;\n\n&:hover {\n    background-color: #317EC6;\n    color: white;\n}\n\n`;\n\n\n\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\npadding: 24px 0 24px 0;\n`;","import { Formik } from 'formik';\nimport { Form, ErrorMessage, FormField, FieldInput, SubmitButton } from '../contactForm/contactForm.styled';\nimport * as Yup from 'yup';\nimport { register } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { Section } from 'components/loginForm/loginForm.styled';\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string()\n        .required('Name is required'),\n    email: Yup.string()\n        .email('Invalid email address')\n        .required('Email is required'),\n    password: Yup.string()\n        .min(7, 'Password should contain minimum 7 symbols')\n        .matches(/\\d/, \"Your password should contain minimum one digit\")\n        .required('Paswword is required')\n});\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n\n    return (\n        <Section>\n        <Formik initialValues={{\n                    name: '', \n                    email: '',\n                    password: '',\n                }}\n                validationSchema={validationSchema}\n                \n                onSubmit={(values, action) => {\n                    dispatch(register(values));\n                }}>\n        <Form>\n        <FormField>\n        User name\n        <FieldInput type=\"text\" name=\"name\" placeholder=\"Enter your name\"  />\n        <ErrorMessage name=\"name\" component=\"div\" />\n        </FormField>\n        <FormField>\n        Email\n        <FieldInput type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n        <ErrorMessage name=\"number\" component=\"div\" />\n        </FormField>\n        <FormField>\n        Password\n        <FieldInput type=\"password\" name=\"password\" placeholder=\"Min 7 symbols and 1 digit\" />\n        <ErrorMessage name=\"number\" component=\"div\" />\n        </FormField>\n        <SubmitButton type=\"submit\">Register</SubmitButton>\n        </Form>\n    </Formik>\n    </Section>\n    );\n};\n\nexport default RegisterForm;","import RegisterForm from \"components/registerForm/registerForm\";\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\nmax-width: 1230px;\npadding: 0 15px 0 15px;\nmargin: 0 auto 0 auto;\n`;\n\nconst Register = () => {\n\n    return (\n        <main>\n        <Container>\n        <Helmet>\n            <title>Registration</title>\n        </Helmet>\n        <RegisterForm />\n        </Container>\n        </main>\n    )\n};\n\nexport default Register;"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","ErrorMessage","FormikErrorMessage","_templateObject2","FormField","_templateObject3","FieldInput","Field","_templateObject4","SubmitButton","_templateObject5","Section","validationSchema","Yup","shape","name","required","email","password","min","matches","dispatch","useDispatch","_jsx","children","Formik","initialValues","onSubmit","values","action","register","_jsxs","type","placeholder","component","Container","Helmet","RegisterForm"],"sourceRoot":""}