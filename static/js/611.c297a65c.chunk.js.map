{"version":3,"file":"static/js/611.c297a65c.chunk.js","mappings":"mTAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAkBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0HASzBC,GAAeJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAA0BM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4IASzCI,EAAYP,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,iFAOxBM,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAaW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8IAa1BS,EAAeZ,EAAAA,GAAAA,OAAaa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,+N,qECvC5BW,E,QAAUd,GAAAA,QAAcE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kC,sJCM/BY,EAAmBC,EAAAA,KAAaC,MAAM,CACxCC,MAAOF,EAAAA,KACFE,MAAM,yBACNC,SAAS,qBACdC,SAAUJ,EAAAA,KACLK,IAAI,EAAG,6CACPC,QAAQ,KAAM,kDACdH,SAAS,0BAoClB,EAjCkB,WACd,IAAMI,GAAWC,EAAAA,EAAAA,MAGjB,OACIC,EAAAA,EAAAA,KAACX,EAAAA,EAAO,CAAAY,UACRD,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CAACC,cAAe,CACXV,MAAO,GACPE,SAAU,IAEdL,iBAAkBA,EAElBc,SAAU,SAACC,GACPP,GAASQ,EAAAA,EAAAA,IAAMD,IAASE,SAASC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAI,IAAEC,OAAM,SAAAC,GAAK,OAAIC,MAAM,wEAAwE,GAClK,EAAEZ,UACVa,EAAAA,EAAAA,MAACxC,EAAAA,GAAI,CAAA2B,SAAA,EACLa,EAAAA,EAAAA,MAAChC,EAAAA,GAAS,CAAAmB,SAAA,CAAC,SAEXD,EAAAA,EAAAA,KAAChB,EAAAA,GAAU,CAAC+B,KAAK,QAAQC,KAAK,QAAQC,YAAY,sBAClDjB,EAAAA,EAAAA,KAACrB,EAAAA,GAAY,CAACqC,KAAK,QAAQE,UAAU,YAErCJ,EAAAA,EAAAA,MAAChC,EAAAA,GAAS,CAAAmB,SAAA,CAAC,YAEXD,EAAAA,EAAAA,KAAChB,EAAAA,GAAU,CAAC+B,KAAK,WAAWC,KAAK,WAAWC,YAAY,+BACxDjB,EAAAA,EAAAA,KAACrB,EAAAA,GAAY,CAACqC,KAAK,WAAWE,UAAU,YAExClB,EAAAA,EAAAA,KAACb,EAAAA,GAAY,CAAC4B,KAAK,SAAQd,SAAC,iBAKpC,E,UC7CMkB,E,QAAY5C,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+EAmB5B,EAbc,WACV,OACGsB,EAAAA,EAAAA,KAAA,QAAAC,UACCa,EAAAA,EAAAA,MAACK,EAAS,CAAAlB,SAAA,EACVD,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CAAAnB,UACHD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,aAEXD,EAAAA,EAAAA,KAACqB,EAAS,QAIlB,C","sources":["components/contactForm/contactForm.styled.js","components/loginForm/loginForm.styled.js","components/loginForm/loginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormikForm, ErrorMessage as FormikErrorMessage, Field } from 'formik';\n\nexport const Form = styled(FormikForm)`\ndisplay: flex;\nflex-direction: column;\ngap: 15px;\npadding: 25px;\nborder: 1px solid #2a2a2a;\nwidth: 375px;\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\nbackground-color: #DE6363;\ncolor: white;\nborder-radius: 7px;\npadding: 5px 10px 5px 10px;\nmargin: 5px 0 5px 0;\nwidth: 353px;\n`;\n\nexport const FormField = styled.label`\ndisplay: flex;\nflex-direction: column;\ngap: 5px;\nfont-weight: 600;\n`;\n\nexport const FieldInput = styled(Field)`\nwidth: 340px;\npadding: 10px 15px 10px 15px;\n\n&:hover {\n    border-color: #317EC6;\n}\n\n&::placeholder {\n    opacity: 0.3;\n}\n`;\n\nexport const SubmitButton = styled.button`\nwidth: 375px;\npadding: 10px 10px 10px 10px;\nmargin-top: 15px;\nborder: 0;\nborder-radius: 7px;\nfont-weight: 600;\nbackground-color: #A2C2DF;\n\n&:hover {\n    background-color: #317EC6;\n    color: white;\n}\n\n`;\n\n\n\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\npadding: 24px 0 24px 0;\n`;","import { Formik } from 'formik';\nimport { Form, ErrorMessage, FormField, FieldInput, SubmitButton } from '../contactForm/contactForm.styled';\nimport * as Yup from 'yup';\nimport { logIn } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { Section } from './loginForm.styled';\n\n\nconst validationSchema = Yup.object().shape({\n    email: Yup.string()\n        .email('Invalid email address')\n        .required('Email is required'),\n    password: Yup.string()\n        .min(7, 'Password should contain minimum 7 symbols')\n        .matches(/\\d/, \"Your password should contain minimum one digit\")\n        .required('Paswword is required')\n});\n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n\n\n    return (\n        <Section>\n        <Formik initialValues={{ \n                    email: '',\n                    password: '',\n                }}\n                validationSchema={validationSchema}\n                \n                onSubmit={(values) => {\n                    dispatch(logIn(values)).unwrap().then(response => response.data).catch(error => alert(\"'Please, check your password or login because no such user was found'\"));\n                }}>\n        <Form>\n        <FormField>\n        Email\n        <FieldInput type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n        <ErrorMessage name=\"email\" component=\"div\" />\n        </FormField>\n        <FormField>\n        Password\n        <FieldInput type=\"password\" name=\"password\" placeholder=\"Min 7 symbols and 1 digit\" />\n        <ErrorMessage name=\"password\" component=\"div\" />\n        </FormField>\n        <SubmitButton type=\"submit\">Log in</SubmitButton>\n        </Form>\n    </Formik>\n    </Section>\n    );\n};\n\nexport default LoginForm;","import LoginForm from \"components/loginForm/loginForm\";\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\nmax-width: 1230px;\npadding: 0 15px 0 15px;\nmargin: 0 auto 0 auto;\n`;\n\nconst Login = () => {\n    return (\n       <main>\n        <Container>\n        <Helmet>\n            <title>Login</title>\n        </Helmet>\n        <LoginForm />\n        </Container>\n       </main>\n    );\n};\n\nexport default Login;"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","ErrorMessage","FormikErrorMessage","_templateObject2","FormField","_templateObject3","FieldInput","Field","_templateObject4","SubmitButton","_templateObject5","Section","validationSchema","Yup","shape","email","required","password","min","matches","dispatch","useDispatch","_jsx","children","Formik","initialValues","onSubmit","values","logIn","unwrap","then","response","data","catch","error","alert","_jsxs","type","name","placeholder","component","Container","Helmet","LoginForm"],"sourceRoot":""}